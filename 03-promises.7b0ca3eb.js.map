{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,QAEtC,IAAIC,EAAiB,EACjBC,EAAe,EACfC,EAAmB,EA0DvB,SAASC,EAAcC,EAAUC,GAG/B,OAFsBC,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,C,SAAEL,E,MAAUC,IAE5BG,QAAQE,OAAO,C,SAAEN,E,MAAUC,GAEtC,CAhEAR,EAAOc,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAOoBC,EALPC,MAAMC,KAAKJ,EAAMK,OAAOH,UAM3CA,EAASI,SAAQC,IACf,OAAQA,EAAQC,MACd,IAAK,SACHpB,EAAiBqB,OAAOC,SAASH,EAAQI,OAEzC,MAEF,IAAK,QACHtB,EAAeoB,OAAOC,SAASH,EAAQI,OAEvC,MAEF,IAAK,OACHrB,EAAmBmB,OAAOC,SAASH,EAAQI,OAG/C,IAIJ,WACE,IAAK,IAAIC,EAAQ,EAAGA,EAAQxB,EAAgBwB,IAAS,CACnD,MAAMpB,EAAWoB,EAAQ,EACnBC,EAAsBxB,EAE5ByB,YAAW,WACTvB,EAAcC,EAAUqB,GACrBE,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjB,MAAMuB,EAAU,uBAAuBxB,QAAeC,MAEtDV,EAAAkC,OAAOC,QAAQF,GACfG,QAAQC,IAAIJ,EAAA,IAEbK,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClB,MAAMuB,EAAU,sBAAsBxB,QAAeC,MAErDV,EAAAkC,OAAOK,QAAQN,GACfG,QAAQC,IAAIJ,EAAA,GAElB,GAAGH,GAEHxB,GAAgBC,CAClB,CACF,CA/CEiC,GAGF,IAA4BrB,CAF5B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/03-promises.css';\n\nconst formEl = document.querySelector('form');\n\nlet promisesNumber = 0;\nlet promiseDelay = 0;\nlet promiseDelayStep = 0;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  parseElementsValue(Array.from(event.target.elements));\n\n  runPromises();\n}\n\nfunction parseElementsValue(elements) {\n  elements.forEach(element => {\n    switch (element.name) {\n      case 'amount':\n        promisesNumber = Number.parseInt(element.value);\n\n        break;\n\n      case 'delay':\n        promiseDelay = Number.parseInt(element.value);\n\n        break;\n\n      case 'step':\n        promiseDelayStep = Number.parseInt(element.value);\n\n        break;\n    }\n  });\n}\n\nfunction runPromises() {\n  for (let index = 0; index < promisesNumber; index++) {\n    const position = index + 1;\n    const currentPromiseDelay = promiseDelay;\n\n    setTimeout(function () {\n      createPromise(position, currentPromiseDelay)\n        .then(({ position, delay }) => {\n          const message = `✅ Fulfilled promise ${position} in ${delay}ms`;\n\n          Notify.success(message);\n          console.log(message);\n        })\n        .catch(({ position, delay }) => {\n          const message = `❌ Rejected promise ${position} in ${delay}ms`;\n\n          Notify.failure(message);\n          console.log(message);\n        });\n    }, currentPromiseDelay);\n\n    promiseDelay += promiseDelayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return Promise.resolve({ position, delay });\n  } else {\n    return Promise.reject({ position, delay });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$promisesNumber","$47d4ff9957288465$var$promiseDelay","$47d4ff9957288465$var$promiseDelayStep","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","addEventListener","event","preventDefault","elements","Array","from","target","forEach","element","name","Number","parseInt","value","index","currentPromiseDelay","setTimeout","then","message","Notify","success","console","log","catch","failure","$47d4ff9957288465$var$runPromises"],"version":3,"file":"03-promises.7b0ca3eb.js.map"}